Index: bfd/ChangeLog
===================================================================
RCS file: /cvs/src/src/bfd/ChangeLog,v
retrieving revision 1.4318.2.16
retrieving revision 1.4318.2.21
diff -r1.4318.2.16 -r1.4318.2.21
0a1,34
> 2009-01-14  Joseph Myers  <joseph@codesourcery.com>
> 
> 	* elf32-arm.c (elf32_arm_final_link_relocate): Do not turn
> 	branches to undefine weak symbols into branches to the next
> 	instruction if creating PLT entries for those symbols.
> 
> 2008-12-23  Nick Clifton  <nickc@redhat.com>
> 
> 	* Import this patch from the mainline:
> 	2008-11-10  Andreas Schwab  <schwab@suse.de>
> 
> 	PR 7011
> 	* elf.c (assign_file_positions_for_non_load_sections): Handle
> 	PT_GNU_RELRO specially.
> 
> 2008-11-20  Alan Modra  <amodra@bigpond.net.au>
> 
> 	* elf32-ppc.c (allocate_dynrelocs): Always use tlsld_got for
> 	TLS_LD even when symbol is used with other TLS reloc types.
> 	(ppc_elf_relocate_section): Bypass symbol checks when using tlsld_got.
> 	Leave addend zero on LD DTPMOD dynamic reloc.
> 
> 2008-11-17  Eric B. Weddington  <eric.weddington@atmel.com>
> 
> 	PR 7022
> 	* elf32-avr.c (bfd_elf_avr_final_write_processing):
> 	Add missing break statements.
> 
> 2008-10-28  Tristan Gingold  <gingold@adacore.com>
> 
> 	* configure.in: Bump version to 2.19.0
> 	* Makefile.am (RELEASE): Unset.
> 	* configure, Makefile.in: Regenerated.
> 
Index: bfd/Makefile.am
===================================================================
RCS file: /cvs/src/src/bfd/Makefile.am,v
retrieving revision 1.214.2.2
retrieving revision 1.214.2.3
diff -r1.214.2.2 -r1.214.2.3
7c7
< RELEASE=y
---
> # RELEASE=y
Index: bfd/Makefile.in
===================================================================
RCS file: /cvs/src/src/bfd/Makefile.in,v
retrieving revision 1.237.2.2
retrieving revision 1.237.2.3
diff -r1.237.2.2 -r1.237.2.3
274c274
< RELEASE = y
---
> # RELEASE=y
Index: bfd/configure
===================================================================
RCS file: /cvs/src/src/bfd/configure,v
retrieving revision 1.281.2.5
retrieving revision 1.281.2.6
diff -r1.281.2.5 -r1.281.2.6
3035c3035
<  VERSION=2.19
---
>  VERSION=2.19.0
Index: bfd/configure.in
===================================================================
RCS file: /cvs/src/src/bfd/configure.in,v
retrieving revision 1.243.2.5
retrieving revision 1.243.2.6
diff -r1.243.2.5 -r1.243.2.6
11c11
< AM_INIT_AUTOMAKE(bfd, 2.19)
---
> AM_INIT_AUTOMAKE(bfd, 2.19.0)
Index: bfd/elf.c
===================================================================
RCS file: /cvs/src/src/bfd/elf.c,v
retrieving revision 1.462.2.2
retrieving revision 1.462.2.3
diff -r1.462.2.2 -r1.462.2.3
4609c4609,4663
<       if (m->count != 0)
---
>       if (p->p_type == PT_GNU_RELRO)
> 	{
> 	  const Elf_Internal_Phdr *lp;
> 
> 	  BFD_ASSERT (!m->includes_filehdr && !m->includes_phdrs);
> 
> 	  if (link_info != NULL)
> 	    {
> 	      /* During linking the range of the RELRO segment is passed
> 		 in link_info.  */
> 	      for (lp = phdrs; lp < phdrs + count; ++lp)
> 		{
> 		  if (lp->p_type == PT_LOAD
> 		      && lp->p_vaddr >= link_info->relro_start
> 		      && lp->p_vaddr < link_info->relro_end
> 		      && lp->p_vaddr + lp->p_filesz >= link_info->relro_end)
> 		    break;
> 		}
> 	    }
> 	  else
> 	    {
> 	      /* Otherwise we are copying an executable or shared
> 		 library, but we need to use the same linker logic.  */
> 	      for (lp = phdrs; lp < phdrs + count; ++lp)
> 		{
> 		  if (lp->p_type == PT_LOAD
> 		      && lp->p_paddr == p->p_paddr)
> 		    break;
> 		}
> 	    }
> 
> 	  if (lp < phdrs + count)
> 	    {
> 	      p->p_vaddr = lp->p_vaddr;
> 	      p->p_paddr = lp->p_paddr;
> 	      p->p_offset = lp->p_offset;
> 	      if (link_info != NULL)
> 		p->p_filesz = link_info->relro_end - lp->p_vaddr;
> 	      else if (m->p_size_valid)
> 		p->p_filesz = m->p_size;
> 	      else
> 		abort ();
> 	      p->p_memsz = p->p_filesz;
> 	      p->p_align = 1;
> 	      p->p_flags = (lp->p_flags & ~PF_W);
> 	    }
> 	  else if (link_info != NULL)
> 	    {
> 	      memset (p, 0, sizeof *p);
> 	      p->p_type = PT_NULL;
> 	    }
> 	  else
> 	    abort ();
> 	}
>       else if (m->count != 0)
4625,4658c4679
< 
< 	      if (p->p_type == PT_GNU_RELRO)
< 		{
< 		  /* When we get here, we are copying executable
< 		     or shared library. But we need to use the same
< 		     linker logic.  */
< 		  Elf_Internal_Phdr *lp;
< 
< 		  for (lp = phdrs; lp < phdrs + count; ++lp)
< 		    {
< 		      if (lp->p_type == PT_LOAD
< 			  && lp->p_paddr == p->p_paddr)
< 			break;
< 		    }
< 	  
< 		  if (lp < phdrs + count)
< 		    {
< 		      /* We should use p_size if it is valid since it
< 			 may contain the first few bytes of the next
< 			 SEC_ALLOC section.  */
< 		      if (m->p_size_valid)
< 			p->p_filesz = m->p_size;
< 		      else
< 			abort ();
< 		      p->p_vaddr = lp->p_vaddr;
< 		      p->p_offset = lp->p_offset;
< 		      p->p_memsz = p->p_filesz;
< 		      p->p_align = 1;
< 		    }
< 		  else
< 		    abort ();
< 		}
< 	      else
< 		p->p_offset = m->sections[0]->filepos;
---
> 	      p->p_offset = m->sections[0]->filepos;
4661c4682
<       else
---
>       else if (m->includes_filehdr)
4663,4705c4684,4692
< 	  if (m->includes_filehdr)
< 	    {
< 	      p->p_vaddr = filehdr_vaddr;
< 	      if (! m->p_paddr_valid)
< 		p->p_paddr = filehdr_paddr;
< 	    }
< 	  else if (m->includes_phdrs)
< 	    {
< 	      p->p_vaddr = phdrs_vaddr;
< 	      if (! m->p_paddr_valid)
< 		p->p_paddr = phdrs_paddr;
< 	    }
< 	  else if (p->p_type == PT_GNU_RELRO)
< 	    {
< 	      Elf_Internal_Phdr *lp;
< 
< 	      for (lp = phdrs; lp < phdrs + count; ++lp)
< 		{
< 		  if (lp->p_type == PT_LOAD
< 		      && lp->p_vaddr <= link_info->relro_end
< 		      && lp->p_vaddr >= link_info->relro_start
< 		      && (lp->p_vaddr + lp->p_filesz
< 			  >= link_info->relro_end))
< 		    break;
< 		}
< 
< 	      if (lp < phdrs + count
< 		  && link_info->relro_end > lp->p_vaddr)
< 		{
< 		  p->p_vaddr = lp->p_vaddr;
< 		  p->p_paddr = lp->p_paddr;
< 		  p->p_offset = lp->p_offset;
< 		  p->p_filesz = link_info->relro_end - lp->p_vaddr;
< 		  p->p_memsz = p->p_filesz;
< 		  p->p_align = 1;
< 		  p->p_flags = (lp->p_flags & ~PF_W);
< 		}
< 	      else
< 		{
< 		  memset (p, 0, sizeof *p);
< 		  p->p_type = PT_NULL;
< 		}
< 	    }
---
> 	  p->p_vaddr = filehdr_vaddr;
> 	  if (! m->p_paddr_valid)
> 	    p->p_paddr = filehdr_paddr;
> 	}
>       else if (m->includes_phdrs)
> 	{
> 	  p->p_vaddr = phdrs_vaddr;
> 	  if (! m->p_paddr_valid)
> 	    p->p_paddr = phdrs_paddr;
Index: bfd/elf32-arm.c
===================================================================
RCS file: /cvs/src/src/bfd/elf32-arm.c,v
retrieving revision 1.157
retrieving revision 1.157.2.1
diff -r1.157 -r1.157.2.1
6384,6385c6384,6386
< 	   the next instruction.  */
< 	if (h && h->root.type == bfd_link_hash_undefweak)
---
> 	   the next instruction unless a PLT entry will be created.  */
> 	if (h && h->root.type == bfd_link_hash_undefweak
> 	    && !(splt != NULL && h->plt.offset != (bfd_vma) -1))
Index: bfd/elf32-avr.c
===================================================================
RCS file: /cvs/src/src/bfd/elf32-avr.c,v
retrieving revision 1.37
retrieving revision 1.37.2.1
diff -r1.37 -r1.37.2.1
1300a1301
>       break;
1307a1309
>       break;
1310a1313
>       break;
Index: bfd/elf32-ppc.c
===================================================================
RCS file: /cvs/src/src/bfd/elf32-ppc.c,v
retrieving revision 1.243.2.3
retrieving revision 1.243.2.4
diff -r1.243.2.3 -r1.243.2.4
4999a5000,5002
>       bfd_boolean dyn;
>       unsigned int need;
> 
5009,5016c5012,5013
<       if (eh->tls_mask == (TLS_TLS | TLS_LD)
< 	  && !eh->elf.def_dynamic)
< 	{
< 	  /* If just an LD reloc, we'll just use htab->tlsld_got.offset.  */
< 	  htab->tlsld_got.refcount += 1;
< 	  eh->elf.got.offset = (bfd_vma) -1;
< 	}
<       else
---
>       need = 0;
>       if ((eh->tls_mask & TLS_TLS) != 0)
5018,5020c5015
< 	  bfd_boolean dyn;
< 	  unsigned int need = 0;
< 	  if ((eh->tls_mask & TLS_TLS) != 0)
---
> 	  if ((eh->tls_mask & TLS_LD) != 0)
5022,5024c5017,5022
< 	      if ((eh->tls_mask & TLS_LD) != 0)
< 		need += 8;
< 	      if ((eh->tls_mask & TLS_GD) != 0)
---
> 	      if (!eh->elf.def_dynamic)
> 		/* We'll just use htab->tlsld_got.offset.  This should
> 		   always be the case.  It's a little odd if we have
> 		   a local dynamic reloc against a non-local symbol.  */
> 		htab->tlsld_got.refcount += 1;
> 	      else
5026,5029d5023
< 	      if ((eh->tls_mask & (TLS_TPREL | TLS_TPRELGD)) != 0)
< 		need += 4;
< 	      if ((eh->tls_mask & TLS_DTPREL) != 0)
< 		need += 4;
5031c5025,5029
< 	  else
---
> 	  if ((eh->tls_mask & TLS_GD) != 0)
> 	    need += 8;
> 	  if ((eh->tls_mask & (TLS_TPREL | TLS_TPRELGD)) != 0)
> 	    need += 4;
> 	  if ((eh->tls_mask & TLS_DTPREL) != 0)
5032a5031,5037
> 	}
>       else
> 	need += 4;
>       if (need == 0)
> 	eh->elf.got.offset = (bfd_vma) -1;
>       else
> 	{
5042c5047,5048
< 	      if ((eh->tls_mask & TLS_LD) != 0)
---
> 	      if ((eh->tls_mask & TLS_LD) != 0
> 		  && eh->elf.def_dynamic)
5278c5284,5285
< 	    if (*lgot_masks == (TLS_TLS | TLS_LD))
---
> 	    unsigned int need = 0;
> 	    if ((*lgot_masks & TLS_TLS) != 0)
5280,5283c5287,5294
< 		/* If just an LD reloc, we'll just use
< 		   htab->tlsld_got.offset.  */
< 		htab->tlsld_got.refcount += 1;
< 		*local_got = (bfd_vma) -1;
---
> 		if ((*lgot_masks & TLS_GD) != 0)
> 		  need += 8;
> 		if ((*lgot_masks & TLS_LD) != 0)
> 		  htab->tlsld_got.refcount += 1;
> 		if ((*lgot_masks & (TLS_TPREL | TLS_TPRELGD)) != 0)
> 		  need += 4;
> 		if ((*lgot_masks & TLS_DTPREL) != 0)
> 		  need += 4;
5285a5297,5300
> 	      need += 4;
> 	    if (need == 0)
> 	      *local_got = (bfd_vma) -1;
> 	    else
5287,5298d5301
< 		unsigned int need = 0;
< 		if ((*lgot_masks & TLS_TLS) != 0)
< 		  {
< 		    if ((*lgot_masks & TLS_GD) != 0)
< 		      need += 8;
< 		    if ((*lgot_masks & (TLS_TPREL | TLS_TPRELGD)) != 0)
< 		      need += 4;
< 		    if ((*lgot_masks & TLS_DTPREL) != 0)
< 		      need += 4;
< 		  }
< 		else
< 		  need += 4;
6563c6566,6567
< 			&& (h == NULL
---
> 			&& (offp == &htab->tlsld_got.offset
> 			    || h == NULL
6594c6598
< 			if (indx == 0)
---
> 			if (indx == 0 && tls_ty != (TLS_TLS | TLS_LD))
Index: bfd/version.h
===================================================================
RCS file: /cvs/src/src/bfd/version.h,v
retrieving revision 1.2442.2.37
retrieving revision 1.2442.2.142
diff -r1.2442.2.37 -r1.2442.2.142
1c1
< #define BFD_VERSION_DATE 20081016
---
> #define BFD_VERSION_DATE 20090129
Index: bfd/doc/bfdver.texi
===================================================================
RCS file: /cvs/src/src/bfd/doc/Attic/bfdver.texi,v
retrieving revision 1.1.4.2
retrieving revision 1.1.4.3
diff -r1.1.4.2 -r1.1.4.3
1c1
< @set VERSION 2.19
---
> @set VERSION 2.19.0
3c3
< @set UPDATED October 2008
---
> @set UPDATED December 2008
Index: binutils/ChangeLog
===================================================================
RCS file: /cvs/src/src/binutils/ChangeLog,v
retrieving revision 1.1365.2.5
retrieving revision 1.1365.2.7
diff -r1.1365.2.5 -r1.1365.2.7
0a1,13
> 2008-12-23  Nick Clifton  <nickc@redhat.com>
> 
> 	* windmc.c (main): Use correct type for file length.
> 	* dlltool.c (gen_exp_file): Likewise.
> 
> 2008-12-01  Nick Clifton  <nickc@redhat.com>
> 
> 	PR 7044
> 	* dlltool.c (run): Use formatting string to avoid compile time
> 	warning.
> 	(gen_exp_file): Check return value from fread.
> 	* windmc.c (main): Check return value from fread.
> 
Index: binutils/dlltool.c
===================================================================
RCS file: /cvs/src/src/binutils/dlltool.c,v
retrieving revision 1.82
retrieving revision 1.82.2.2
diff -r1.82 -r1.82.2.2
1209c1209
<       inform (strerror (errno));
---
>       inform ("%s", strerror (errno));
1983c1983
<       int numbytes;
---
>       bfd_size_type numbytes;
1995c1995,1996
<       fread (copy, 1, numbytes, base_file);
---
>       if (fread (copy, 1, numbytes, base_file) < numbytes)
> 	fatal (_("failed to read the number of entries from base file"));
1998d1998
< 
Index: binutils/windmc.c
===================================================================
RCS file: /cvs/src/src/binutils/windmc.c,v
retrieving revision 1.5
retrieving revision 1.5.2.2
diff -r1.5 -r1.5.2.2
1147c1147
<     long flen;
---
>     bfd_size_type flen;
1158c1158,1159
<     fread (buff, 1, flen, fp);
---
>     if (fread (buff, 1, flen, fp) < flen)
>       fatal (_("unable to read contents of %s"), input_filename);
Index: gas/ChangeLog
===================================================================
RCS file: /cvs/src/src/gas/ChangeLog,v
retrieving revision 1.3626.2.11
retrieving revision 1.3626.2.13
diff -r1.3626.2.11 -r1.3626.2.13
0a1,26
> 2009-01-14  Jakub Jelinek  <jakub@redhat.com>
> 
> 	* Makefile.am (ehopt.o): Add struc-symbol.h.
> 	* Makefile.in: Regenerated.
> 	* ehopt.c: Include struc-symbol.h.
> 	(check_eh_frame): For very small O_constant DW_CFA_advance_loc4
> 	create correct DW_CFA_advance_loc.  Handle O_subtract only
> 	for code alignment factor 1, otherwise handle O_divide or
> 	O_right_shift of O_subtract and O_constant.
> 	(eh_frame_estimate_size_before_relax): Always divide by ca.
> 	(eh_frame_convert_frag): Likewise.
> 
> 2009-01-14  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
> 
> 	* dw2gencfi.c (output_cfi_insn): Scale DW_CFA_advance_loc1,
> 	DW_CFA_advance_loc2 and DW_CFA_advance_loc4 outputs.
> 
> 2009-01-08  Adam Nemet  <anemet@caviumnetworks.com>
> 
> 	* config/tc-mips.c (NO_ISA_COP): New macro.
> 	(COP_INSN): New macro.
> 	(is_opcode_valid): Use them.
> 	(macro) <ld_st>: Use them.  Don't accept coprocessor load store
> 	insns based on the ISA if CPU is NO_ISA_COP.
> 	<copz>: Likewise for coprocessor operations.
> 
Index: gas/Makefile.am
===================================================================
RCS file: /cvs/src/src/gas/Makefile.am,v
retrieving revision 1.159.2.2
retrieving revision 1.159.2.3
diff -r1.159.2.2 -r1.159.2.3
2162c2162,2163
< ehopt.o: ehopt.c subsegs.h $(INCDIR)/obstack.h $(INCDIR)/elf/dwarf2.h
---
> ehopt.o: ehopt.c subsegs.h $(INCDIR)/obstack.h $(INCDIR)/elf/dwarf2.h \
>   struc-symbol.h
Index: gas/Makefile.in
===================================================================
RCS file: /cvs/src/src/gas/Makefile.in,v
retrieving revision 1.177.2.2
retrieving revision 1.177.2.3
diff -r1.177.2.2 -r1.177.2.3
3005c3005,3006
< ehopt.o: ehopt.c subsegs.h $(INCDIR)/obstack.h $(INCDIR)/elf/dwarf2.h
---
> ehopt.o: ehopt.c subsegs.h $(INCDIR)/obstack.h $(INCDIR)/elf/dwarf2.h \
>   struc-symbol.h
Index: gas/dw2gencfi.c
===================================================================
RCS file: /cvs/src/src/gas/dw2gencfi.c,v
retrieving revision 1.36.2.3
retrieving revision 1.36.2.4
diff -r1.36.2.3 -r1.36.2.4
2c2
<    Copyright 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.
---
>    Copyright 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.
975c975
< 	    else if (delta <= 0xFF)
---
> 	    else if (scaled <= 0xFF)
978c978
< 		out_one (delta);
---
> 		out_one (scaled);
980c980
< 	    else if (delta <= 0xFFFF)
---
> 	    else if (scaled <= 0xFFFF)
983c983
< 		out_two (delta);
---
> 		out_two (scaled);
988c988
< 		out_four (delta);
---
> 		out_four (scaled);
Index: gas/ehopt.c
===================================================================
RCS file: /cvs/src/src/gas/ehopt.c,v
retrieving revision 1.16
retrieving revision 1.16.2.1
diff -r1.16 -r1.16.2.1
2c2,3
<    Copyright 1998, 2000, 2001, 2003, 2005, 2007 Free Software Foundation, Inc.
---
>    Copyright 1998, 2000, 2001, 2003, 2005, 2007, 2008
>    Free Software Foundation, Inc.
23a25
> #include "struc-symbol.h"
401,403c403
< 	  if (d->cie_info.code_alignment > 0
< 	      && exp->X_add_number % d->cie_info.code_alignment == 0
< 	      && exp->X_add_number / d->cie_info.code_alignment < 0x40)
---
> 	  if (exp->X_add_number < 0x40)
406,407c406
< 		= DW_CFA_advance_loc
< 		  | (exp->X_add_number / d->cie_info.code_alignment);
---
> 		= DW_CFA_advance_loc | exp->X_add_number;
422c421
<       else if (exp->X_op == O_subtract)
---
>       else if (exp->X_op == O_subtract && d->cie_info.code_alignment == 1)
428,435c427
< 	  int fr_subtype;
< 
< 	  if (d->cie_info.code_alignment > 0)
< 	    fr_subtype = d->cie_info.code_alignment << 3;
< 	  else
< 	    fr_subtype = 0;
< 
< 	  frag_var (rs_cfa, 4, 0, fr_subtype, make_expr_symbol (exp),
---
> 	  frag_var (rs_cfa, 4, 0, 1 << 3, make_expr_symbol (exp),
438a431,453
>       else if ((exp->X_op == O_divide
> 		|| exp->X_op == O_right_shift)
> 	       && d->cie_info.code_alignment > 1)
> 	{
> 	  if (exp->X_add_symbol->bsym
> 	      && exp->X_op_symbol->bsym
> 	      && exp->X_add_symbol->sy_value.X_op == O_subtract
> 	      && exp->X_op_symbol->sy_value.X_op == O_constant
> 	      && ((exp->X_op == O_divide
> 		   ? exp->X_op_symbol->sy_value.X_add_number
> 		   : (offsetT) 1 << exp->X_op_symbol->sy_value.X_add_number)
> 		  == (offsetT) d->cie_info.code_alignment))
> 	    {
> 	      /* This is a case we can optimize as well.  The expression was
> 		 not reduced, so we can not finish the optimization until the
> 		 end of the assembly.  We set up a variant frag which we
> 		 handle later.  */
> 	      frag_var (rs_cfa, 4, 0, d->cie_info.code_alignment << 3,
> 			make_expr_symbol (&exp->X_add_symbol->sy_value),
> 			d->loc4_fix, (char *) d->loc4_frag);
> 	      return 1;
> 	    }
> 	}
462c477,479
<   if (ca > 0 && diff % ca == 0 && diff / ca < 0x40)
---
>   assert (ca > 0);
>   diff /= ca;
>   if (diff < 0x40)
499c516
<   int loc4_fix;
---
>   int loc4_fix, ca;
505a523,525
>   ca = frag->fr_subtype >> 3;
>   assert (ca > 0);
>   diff /= ca;
509,513c529,530
<       {
< 	int ca = frag->fr_subtype >> 3;
< 	assert (ca > 0 && diff % ca == 0 && diff / ca < 0x40);
< 	loc4_frag->fr_literal[loc4_fix] = DW_CFA_advance_loc | (diff / ca);
<       }
---
>       assert (diff < 0x40);
>       loc4_frag->fr_literal[loc4_fix] = DW_CFA_advance_loc | diff;
Index: gas/config/tc-mips.c
===================================================================
RCS file: /cvs/src/src/gas/config/tc-mips.c,v
retrieving revision 1.394
retrieving revision 1.394.2.1
diff -r1.394 -r1.394.2.1
517c517
<    condition-code flags unless this is the floating-point coprocessor.  */
---
>    condition-code flags.  */
520,522c520,521
<    && (((PINFO) & INSN_COP)						\
<        || ((PINFO) & (INSN_READ_COND_CODE | INSN_WRITE_COND_CODE)	\
< 	   && ((PINFO) & (FP_S | FP_D)) == 0)))
---
>    && ((PINFO) & (FP_S | FP_D)) == 0					\
>    && ((PINFO) & (INSN_COP | INSN_READ_COND_CODE | INSN_WRITE_COND_CODE)))
Index: gas/testsuite/ChangeLog
===================================================================
RCS file: /cvs/src/src/gas/testsuite/ChangeLog,v
retrieving revision 1.1387.2.1
retrieving revision 1.1387.2.2
diff -r1.1387.2.1 -r1.1387.2.2
0a1,6
> 2009-01-08  Adam Nemet  <anemet@caviumnetworks.com>
> 
> 	* gas/mips/mips1-fp.s, gas/mips/mips1-fp.d, gas/mips/mips1-fp.l:
> 	New tests.
> 	* gas/mips/mips.exp: Run them.
> 
Index: gas/testsuite/gas/mips/mips.exp
===================================================================
RCS file: /cvs/src/src/gas/testsuite/gas/mips/mips.exp,v
retrieving revision 1.145
retrieving revision 1.145.2.1
diff -r1.145 -r1.145.2.1
400a401,403
>     run_dump_test_arches "mips1-fp"	[mips_arch_list_matching mips1]
>     run_list_test_arches "mips1-fp" "-32 -msoft-float" \
> 					[mips_arch_list_matching mips1]
Index: ld/ChangeLog
===================================================================
RCS file: /cvs/src/src/ld/ChangeLog,v
retrieving revision 1.1868.2.6
retrieving revision 1.1868.2.9
diff -r1.1868.2.6 -r1.1868.2.9
1c1
< 2008-10-05  Alan Modra  <amodra@bigpond.net.au>
---
> 2009-01-08  Dave Korn  <dave.korn.cygwin@gmail.com>
3,6c3
< 	PR 6943
< 	* scripttempl/avr.sc (.bss): Set lma when relocating.
< 	(.bss, .noinit): No need to set vma when relocating.
< 	(.text, .bss, ,noinit): Set vma to zero when not relocating.
---
> Backport bugfix from HEAD:
8c5
< 2008-09-30  Joseph Myers  <joseph@codesourcery.com>
---
>   2009-01-03  Dave Korn  <dave.korn.cygwin@gmail.com>
10,11c7,9
< 	* emulparams/elf64ppc.sh (OTHER_GOT_RELOC_SECTIONS): Add .rela.opd
< 	and .rela.branch_lt.
---
> 	* pe-dll.c (autofilter_liblist):  Add entry for shared libgcc.
> 	(libnamencmp):  New function.
> 	(auto_export):  Use it in place of strncmp when filtering libraries.
13,823c11
< 2008-09-29  Nick Clifton  <nickc@redhat.com>
< 
< 	* po/vi.po: Updated Vietnamese translation.
< 
< 2008-09-09  Peter Rosin  <peda@lysator.liu.se>  (tiny change)
< 
< 	* emultempl/pe.em (pe_find_data_imports): Add trailing newline
< 	to warning message.
< 	* emultempl/pep.em (pep_find_data_imports): Likewise.
< 
< 2008-09-09  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* Makefile.am: Run "make dep-am".
< 	* Makefile.in: Regenerate.
< 	* po/ld.pot: Regenerate.
< 
< 2008-09-09  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/beos.em (gld${EMULATION_NAME}_place_orphan): Updated.
< 	* emultempl/sunos.em (gld${EMULATION_NAME}_before_allocation): Ditto.
< 
< 2008-09-08  Tristan Gingold  <gingold@adacore.com>
< 
< 	* NEWS: Add a marker for the 2.19 features.
< 
< 2008-09-07  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldlang.h (lang_output_section_find): Define.
< 	(lang_output_section_statement_lookup): Update prototype.
< 	* ldlang.c (lang_output_section_find,
< 	lang_output_section_statement_lookup_1): Merge into..
< 	(lang_output_section_statement_lookup): ..here.  Update all callers.
< 	(process_insert_statements): Set constraint negative
< 	for output section statements we might be inserting.  Make error
< 	fatal on not finding insertion section.
< 	(lang_output_section_find): Rather than comparing
< 	output_section_statement.constraint against -1, test whether
< 	it is postive.
< 	(lang_output_section_statement_lookup_1): Likewise.
< 	(output_prev_sec_find, strip_excluded_output_sections): Likewise.
< 	(lang_record_phdrs): Likewise.
< 	* emultempl/elf32.em (output_rel_find): Likewise.
< 	* NEWS: Mention INSERT.
< 
< 2008-08-26  Nick Clifton  <nickc@redhat.com>
< 
< 	PR 6727
< 	* emultempl/armelf.em (arm_elf_set_bfd_for_interworking): Scan all
< 	input sections in all input bfds and always select the last
< 	suitable one, so that interworking stubs are always processed
< 	after all other input sections.
< 	(arm_elf_before_allocation): Remove redundant use of
< 	output_has_begun flag.
< 
< 2008-08-24  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* configure.in: Update a number of obsolete autoconf macros.
< 	* configure: Regenerate.
< 	* aclocal.m4: Regenerate.
< 
< 2008-08-21  Jan Kratochvil  <jan.kratochvil@redhat.com>
< 
< 	PR ld/6833
< 	* ldexp.c (fold_binary <DATA_SEGMENT_ALIGN>): Do not align
< 	EXPLD.DATASEG.MIN_BASE.
< 	* ldlang.c (lang_size_sections): New variable OLD_BASE.  Rename
< 	OLD_MIN_BASE to MIN_BASE with the former alignment from `ldexp.c'.
< 	Use OLD_BASE now for the minimal base check after the base decrease by
< 	the maximum alignment found.
< 
< 2008-08-17  Alan Modra  <amodra@bigpond.net.au>
< 
< 	PR 6478
< 	* ldcref.c (check_local_sym_xref): Use bfd_generic_link_read_symbols.
< 	Don't free symbol pointer array.
< 	(check_refs): Likewise.
< 	* ldmain.c (warning_callback): Likewise.
< 	* ldmisc.c (vfinfo): Likewise.
< 	* pe-dll.c (process_def_file): Likewise.
< 	(pe_walk_relocs_of_symbol, generate_reloc): Likewise.
< 	* emultempl/pe.em (pe_find_data_imports): Likewise.
< 	(gld_${EMULATION_NAME}_after_open): Likewise.
< 	* emultempl/pep.em (pep_find_data_imports): Likewise.
< 	(gld_${EMULATION_NAME}_after_open): Likewise.
< 	* ldlang.h (lang_input_statement_type): Delete asymbols, symbol_count,
< 	passive_position, closed.
< 	* ldlang.c (new_afile): Don't set asymbols and symbol_count.
< 	* ldmain.c (add_archive_element): xcalloc lang_input_statement_type.
< 
< 2008-08-15  Alan Modra  <amodra@bigpond.net.au>
< 
< 	PR 6526
< 	* configure.in: Invoke AC_USE_SYSTEM_EXTENSIONS.
< 	* Makefile.in: Regenerate.
< 	* aclocal.m4: Regenerate.
< 	* config.in: Regenerate.
< 	* configure: Regenerate.
< 
< 2008-08-09  Alan Modra  <amodra@bigpond.net.au>
< 
< 	PR 6753
< 	* ldmain.c (check_for_scripts_dir, set_scripts_dir): Delete.
< 	(main): Don't set_scripts_dir here.
< 	* ldfile.c (check_for_scripts_dir, find_scripts_dir): New functions,
< 	largely based on ldmain.c versions.
< 	(ldfile_find_command_file): Set up search in script dir here without
< 	affecting library search.
< 	* Makefile.am (ldmain.o): No need to define SCRIPTDIR.
< 	(ldfile.o): New rule.
< 	* Makefile.in: Regenerate.
< 
< 2008-08-08  Anatoly Sokolov  <aesok@post.ru>
< 
< 	* Makefile.am (ALL_EMULATIONS): Add eavr25.o, eavr31.o, eavr35.o,
< 	and eavr51.o.
< 	Add rules for eavr25.c, eavr31.c, eavr35.c, eavr51.c.
< 	* Makefile.in: Regenerate.
< 	* configure.tgt (avr-*-*, targ_extra_emuls): Add avr25, avr31, avr35
< 	and avr51.
< 	* emulparams/avr25.sh: New file.
< 	* emulparams/avr31.sh: New file.
< 	* emulparams/avr35.sh: New file.
< 	* emulparams/avr51.sh: New file.
< 
< 2008-08-08  Richard Sandiford  <rdsandiford@googlemail.com>
< 	    Daniel Jacobowitz  <dan@codesourcery.com>
< 
< 	* emulparams/elf32bmip.sh (GOT): Define, moving .got.plt to...
< 	(OTHER_RELRO_SECTIONS, OTHER_READWRITE_SECTIONS): ...one of these
< 	two variables.
< 	* emulparams/elf32bmipn32-defs.sh: Likewise.
< 	* emultempl/mipself.em: Include ldctor.h, elf/mips.h and elfxx-mips.h.
< 	(is_mips_elf): New macro.
< 	(stub_file, stub_bfd): New variables.
< 	(hook_stub_info): New structure.
< 	(hook_in_stub): New function.
< 	(mips_add_stub_section): Likewise.
< 	(mips_create_output_section_statements): Likewise.
< 	(mips_before_allocation): Likewise.
< 	(real_func): New variable.
< 	(mips_for_each_input_file_wrapper): New function.
< 	(mips_lang_for_each_input_file): Likewise.
< 	(lang_for_each_input_file): Define.
< 	(LDEMUL_BEFORE_ALLOCATION): Likewise.
< 	(LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS): Likewise.
< 
< 2008-08-08  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldfile.c (ldfile_open_file_search): Use concat.
< 	(try_open): Don't use a fixed size pathname buffer.
< 	(ldfile_find_command_file): Likewise.
< 	* emultempl/elf32.em (gld${EMULATION_NAME}_open_dynamic_archive): If
< 	using EXTRA_SHLIB_EXTENSION, don't open twice.
< 
< 2008-08-04  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* Makefile.am (POTFILES.in): Set LC_ALL=C.
< 	* Makefile.in: Regenerate.
< 	* po/POTFILES.in: Regenerate.
< 
< 2008-08-03  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* Makefile.am (spu_ovl.o): Merge rule into..
< 	(spu_ovl.o_c): ..this one.  Only run cpp for spu target.
< 	* Makefile.in: Regenerate.
< 
< 2008-08-02  Jan Kratochvil  <jan.kratochvil@redhat.com>
< 
< 	Include the spu_ovl ASCII form in the repository files.
< 	* emultempl/spuelf.em: No longer use `bin2c', use now `spu_ovl.o_c'.
< 	* Makefile.am (eelf32_spu.c): Depend now on `spu_ovl.o_c'.
< 	($(srcdir)/emultempl/spu_ovl.o_c): New target.
< 	($(srcdir)/emultempl/spu_ovl.o): Rename to...
< 	(spu_ovl.o): ...this one.
< 	* Makefile.in: Regenerate.
< 	* emultempl/spu_ovl.o_c: New file.
< 	* emultempl/spu_ovl.o: File removed.
< 
< 2008-07-31  Takashi Ono  <t_ono@hkfreak.net>
< 
< 	* pe-dll.c (generate_relocs): Don't generate relocs for
< 	undefined weak symbols.
< 
< 2008-07-31  Jan Kratochvil  <jan.kratochvil@redhat.com>
< 
< 	* emultempl/spuelf.em: Abort on the missing required `spu_ovl.o'.
< 
< 2008-07-30  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/pe.em, emultempl/pep.em: Silence gcc warnings.
< 
< 2008-07-18  Joseph Myers  <joseph@codesourcery.com>
< 
< 	* ld.texinfo (--no-wchar-size-warning): Document new ARM option.
< 	* emultempl/armelf.em (no_wchar_size_warning): New.
< 	(arm_elf_create_output_section_statements): Pass
< 	no_wchar_size_warning to arm_elf_create_output_section_statements.
< 	(OPTION_NO_WCHAR_SIZE_WARNING): New.
< 	(PARSE_AND_LIST_LONGOPTS): Add no-wchar-size-warning.
< 	(PARSE_AND_LIST_OPTIONS): List --no-wchar-size-warning.
< 	(PARSE_AND_LIST_ARGS_CASES): Handle --no-wchar-size-warning.
< 
< 2008-07-15  Jie Zhang  <jie.zhang@analog.com>
< 
< 	* emulparams/elf32bfinfd.sh (OTHER_SECTIONS): Define.
< 
< 2008-07-12  Craig Silverstein  <csilvers@google.com>
< 
< 	PR ld/6741
< 	* configure.in: Check for, and include, libz.a if it is present.
< 	* configure: Regenerate.
< 	* config.in: Regenerate.
< 
< 2008-07-12  Jie Zhang  <jie.zhang@analog.com>
< 
< 	Revert
< 	2008-07-12  Jie Zhang  <jie.zhang@analog.com>
< 	* Makefile.am (eelf32bfin.c): Depend on bfin.em.
< 	(eelf32bfinfd.c): Likewise.
< 	* Makefile.in: Regenerate.
< 	* gen-doc.texi: Set Blackfin.
< 	* ld.texinfo: Document --sep-code and Blackfin specific
< 	options.
< 	* ldmain.c (main): Initialize link_info.sep_code.
< 	* lexsup.c (enum option_values): Add OPTION_SEP_CODE.
< 	(ld_options[]): Add --sep-code.
< 	(parse_args): Deal with --sep-code.
< 	* emulparams/bfin.sh (EXTRA_EM_FILE): Define.
< 	* emulparams/elf32bfinfd.sh (OTHER_SECTIONS): Define.
< 	* emultempl/bfin.em: New file.
< 
< 2008-07-12  Jie Zhang  <jie.zhang@analog.com>
< 
< 	* Makefile.am (eelf32bfin.c): Depend on bfin.em.
< 	(eelf32bfinfd.c): Likewise.
< 	* Makefile.in: Regenerate.
< 	* gen-doc.texi: Set Blackfin.
< 	* ld.texinfo: Document --sep-code and Blackfin specific
< 	options.
< 	* ldmain.c (main): Initialize link_info.sep_code.
< 	* lexsup.c (enum option_values): Add OPTION_SEP_CODE.
< 	(ld_options[]): Add --sep-code.
< 	(parse_args): Deal with --sep-code.
< 	* emulparams/bfin.sh (EXTRA_EM_FILE): Define.
< 	* emulparams/elf32bfinfd.sh (OTHER_SECTIONS): Define.
< 	* emultempl/bfin.em: New file.
< 
< 2008-07-09  Danny Smith  <dannysmith@users.sourceforge.net>
< 
<            *pe-dll.c (autofilter_symbolprefixlist): Excude all symbols
<            starting with ".".
<            Exclude "_IMPORT_DESCRIPTOR_".
<            (autofilter_symbolsuffixlist): Exclude "_NULL_THUNK_DATA".
<            (autofilter_symbollist_generic): Don't check for ".text".
<            Exclude "_NULL_IMPORT_DESCRIPTOR".
<            (autofilter_symbollist_i386): Likewise.
< 
< 2008-07-07  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/armelf.em (elf32_arm_add_stub_section): Use
< 	bfd_make_section_with_flags.
< 	* emultempl/avrelf.em (avr_elf_create_output_section_statements):
< 	Likewise.
< 	* emultempl/hppaelf.em (hppaelf_add_stub_section): Likewise.
< 	* emultempl/m68hc1xelf.em (m68hc11elf_add_stub_section): Likewise.
< 	* emultempl/m68kcoff.em (gld${EMULATION_NAME}_after_open): Likewise.
< 	* emultempl/m68kelf.em (m68k_elf_after_open): Likewise.
< 	* emultempl/ppc64elf.em (ppc_add_stub_section): Likewise.
< 	* emultempl/sh64elf.em (sh64_elf_${EMULATION_NAME}_before_allocation):
< 	Likewise.
< 
< 2008-07-06  Nathan Sidwell  <nathan@codesourcery.com>
< 
< 	* ld.texinfo (File Commands): Document that INCLUDE can be used in
< 	several different places.
< 	* ldgram.y (statement, memory_spec, section): Allow INCLUDE.
< 	(memory, memory_spec_list): Simplify BNF
< 	(memory_spec_list_opt): New rule.
< 	* ldlex.l (INCLUDE): Recognize in EXPRESSION.
< 
< 2008-06-20  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spuelf.em (gld${EMULATION_NAME}_finish): Make "can not
< 	build overlay stubs" a fatal error.
< 
< 2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
< 
< 	* config.in: Regenerate.
< 	* configure: Regenerate.
< 
< 2008-06-17  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spuelf.em (extra_stack_space): New variable.
< 	(gld${EMULATION_NAME}_finish): Pass it to spu_elf_check_vma.
< 	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS,
< 	PARSE_AND_LIST_ARGS_CASES): Handle --extra-stack-space.
< 	* emultempl/spu_ovl.S: Mask interrupts during dma and update of
< 	overlay manager structures.
< 	* emultempl/spu_ovl.o: Regenerate.
< 
< 2008-06-16  Hans-Peter Nilsson  <hp@bitrange.com>
< 
< 	* ld.texinfo (@node MMIX): For the __.MMIX.start. prefix, only
< 	mention it as being special for global symbols.
< 
< 2008-06-12  Nick Clifton  <nickc@redhat.com>
< 
< 	* ldlang.c (print_output_section_statement): If the output section
< 	statement has an update_dot_tree expression, apply it to
< 	print_dot.
< 	(print_input_section): Do not update print_dot if it would move
< 	print_dot backwards.
< 	(lang_do_assignments_1): If the output section statement has an
< 	update_dot_tree expression apply it to dot.
< 
< 2008-06-07  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* NEWS: Mention archive:path patterns.
< 	* ld.texinfo: Likewise.
< 	* ldlang.c: Formatting throughout.
< 	(archive_path): Only assume "[A-Za-z]:" is a dos drive.
< 	(input_statement_is_archive_path): New function, extracted from..
< 	(walk_wild): ..here.
< 	(walk_wild_consider_section): Match archive:path here too.
< 	(init_map_userdata, sort_def_symbol): Convert to ISO C.
< 	* ldmain.c (main): Set link_info.path_separator.
< 	* emultempl/spuelf.em (choose_target): Don't set it here.
< 
< 2008-06-06  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldlang.c (name_match): New function.
< 	(unique_section_p, walk_wild_consider_section): Use it here.
< 	(walk_wild_section_general): And here.
< 	(archive_path): New function.
< 	(walk_wild): Match archive:path filespecs.
< 	(open_input_bfds): Don't load archive:path files.
< 	* emultempl/spuelf.em (choose_target): Set path_separator.
< 	* emulparams/elf32_spu.sh: Add ._ea.* sections to ._ea output.
< 
< 2008-06-04  Nick Clifton  <nickc@redhat.com>
< 
< 	* ld.texinfo (Orphan Sections): Fix texi typo.
< 
< 2008-06-04  Chris Metcalf  <cmetcalf@tilera.com>
< 
< 	* lexsup.c (option_values): Add OPTION_NO_WARN_FATAL.
< 	(ld_options): Add entry for --no-fatal-warnings.
< 	(parse_args): Handle OPTION_NO_WARN_FATAL.
< 	* ld.texinfo (Options): Document new command line switch.
< 
< 2008-06-04  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spuelf.em (spu_elf_relink): Correct --no-auto-overlay arg.
< 
< 2008-06-02  Nathan Sidwell  <nathan@codesourcery.com>
< 
< 	* ldlang.c (closest_target_match): Skip generic big and little
< 	endian ELF targets.
< 
< 2008-05-31  Evandro Menezes  <evandro@yahoo.com>
< 
< 	PR ld/6430
< 	* ld.h (enum sort_order): New.
< 	* ldlang.c (lang_check: Fix comment.
< 	(lang_common): Sort commons in ascending or descending order.
< 	(lang_one_common): Likewise.
< 	* lexsup.c (ld_options): Have --sort-common take an option
< 	argument.
< 	(parse_args): Handle argument to --sort-common.
< 	* ld.texinfo (--sort-common): Document new optional argument.
< 	* NEWS: Mention new feature.
< 
< 2008-05-28  Christophe Lyon  <christophe.lyon@st.com>
< 	
< 	* ld.texinfo: State that farcalls stubs are supported for ARM-EABI
< 	only.
< 
< 2008-05-27  Kai Tietz  <kai.tietz@onevision.com>
< 
< 	* pe-dll.c (fill_edata): Make sure we calculate vma's in
< 	type bfd_vma.
< 	(generate_reloc): Likewise.
< 	(pe_implied_import_dll): Likewise.
< 
< 2008-05-21  Nick Clifton  <nickc@redhat.com>
< 
< 	PR ld/6519
< 	* ld.texinfo (Orphan Sections): Mention that the linker will
< 	provide start and stop symbols for orphaned sections if their
< 	names are valid C identifiers.
< 	* NEWS: Add an addendum to the description of the linker feature
< 	for providing orphan section start and end symbols.
< 
< 2008-05-21  Maxim Kuvyrkov  <maxim@codesourcery.com>
< 
< 	* configure.in (--enable-got): New option.  Handle it.
< 	* configure: Regenerate.
< 	* config.in: Regenerate.
< 	* emultempl/m68kelf.em: (got_handling_target_default): New shell
< 	variable.
< 	(GOT_HANDLING_TARGET_DEFAULT): New macro.
< 	(GOT_HANDLING_DEFAULT): New macro.  Initialize it from configure
< 	option if one was given.
< 	(got_handling): New static variable.
< 	(elf_m68k_create_output_section_statements): New static function
< 	implementing hook.
< 	(PARSE_AND_LIST_PROLOGUE): Define shell variable.
< 	(OPTION_GOT): New macro.
< 	(PARSE_AND_LIST_LONGOPTS): Define shell variable.  Specify
< 	--got option.
< 	(got): New linker option.
< 	(PARSE_AND_LIST_OPTIONS): Define shell variable.  Print help string
< 	for --got option.
< 	(PARSE_AND_LIST_ARGS_CASES): Define shell variable.  Handle --got
< 	option.	
< 	* ld.texinfo: Document --got=<type> option.
< 	* gen-doc.texi: Add M68K.
< 	* NEWS: Mention the new feature.
< 
< 2008-05-21  Evandro Menezes  <evandro@yahoo.com>
< 
< 	PR ld/6430
< 	* ld.texinfo (--sort-common): Correct documentation to indicate
< 	that sorting is performed by alignment, not size, biggest
< 	alignment first.
< 
< 2008-05-21  Christophe Lyon  <christophe.lyon@st.com>
< 	    Nick Clifton  <nickc@redhat.com>
< 
< 	* ld.texinfo (ARM): Document --stub-group-size=N option.
< 	Move description of --pic-veneer option into the ARM section.
< 	* NEWS: Mention the support for long function calls.
< 
< 2008-05-15  Christophe Lyon  <christophe.lyon@st.com>
< 	
< 	* emultempl/armelf.em (build_section_lists): New function.
< 	(stub_file): Define.
< 	(need_laying_out): Define.
< 	(group_size): Define.
< 	(hook_stub_info): Define.
< 	(hook_in_stub): New function.
< 	(elf32_arm_add_stub_section): New function.
< 	(gldarm_layout_sections_again): New function.
< 	(gld${EMULATION_NAME}_finish): Replace arm_elf_finish(). Generate
< 	stubs for long calls if needed.
< 	(arm_elf_create_output_section_statements): create stub_file bfd.
< 	(arm_for_each_input_file_wrapper): New function.
< 	(arm_lang_for_each_input_file): New function.
< 	(lang_for_each_input_file): Define.
< 	(PARSE_AND_LIST_PROLOGUE): Add option token OPTION_STUBGROUP_SIZE.
< 	(PARSE_AND_LIST_LONGOPTS): Add option stub-group-size.
< 	(PARSE_AND_LIST_OPTIONS): Add option stub-group-size.
< 	(PARSE_AND_LIST_ARGS_CASES): Add OPTION_STUBGROUP_SIZE case.
< 	(LDEMUL_FINISH): Update to gld${EMULATION_NAME}_finish.
< 	* lang.c (print_input_statement): Skip if bfd has
< 	BFD_LINKER_CREATED.
< 
< 2008-05-14  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* Makefile.in: Regenerate.
< 
< 2008-05-09  Kai Tietz  <kai.tietz@onevision.com>
< 
< 	ld/PR6502
< 	* emultempl/pep.em (compute_dll_image_base): Use bfd_vma instead
< 	of long and change return type to bfd_vma.
< 	(definfo): Change type of address from long to bfd_vma.
< 	(set_pep_value): Replace strtoul to strtoull.
< 	(gld_${EMULATION_NAME}_set_symbols): use bfd_vma instead of long..
< 	* pe-dll.c (pe_dll_generate_def_file): Use fprintf_vma to print
< 	ImageBase.
< 	(quick_reloc): Change argument address from int to bfd_size_type.
< 
< 2008-05-08  Tom Tromey  <tromey@redhat.com>
< 
< 	* ld.texinfo (PowerPC64 ELF64): Fix typo.
< 
< 2008-05-08  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* elf32_spu.sh (OTHER_SECTIONS): Add "._ea".
< 	* elf32ppc.sh: If building with spu support, put ".data.spehandle"
< 	sections at the start of ".data" and provide a symbol to locate
< 	the directory of embedded spe programs.
< 
< 2008-05-08  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldexp.c (exp_print_token): Add ABSOLUTE, MIN_K, ASSERT_K.  Correct
< 	MAX_K.
< 	(fold_binary <SEGMENT_START>): Set expld.result.section to
< 	current section.  Expand comment.  Formatting.
< 	(fold_name <DEFINED>): Set expld.result.section to current section.
< 
< 2008-04-28  Nathan Sidwell  <nathan@codesourcery.com>
< 
< 	* ldlang.c (lang_size_sections_1): Don't check LMA overflow on
< 	non-load sections.
< 
< 2008-04-25  Michael Frysinger  <vapier@gentoo.org>
< 
< 	* configure.tgt (bfin-*-linux-uclibc*): Set targ_emul to elf32bfinfd
< 	and targ_extra_emuls to elf32bfin.
< 
< 2008-04-23  Paolo Bonzini  <bonzini@gnu.org>
< 
< 	* aclocal.m4: Regenerate.
< 	* configure: Regenerate.
< 
< 2008-04-03  Kai Tietz  <kai.tietz@onevision.com>
< 
< 	* scripttempl/pep.sc: Align start of symbol __CTOR_LIST__.
< 
< 2008-04-08  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* po/POTFILES.in: Regenerate.
< 
< 2008-04-08  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spuelf.em (auto_overlay, auto_overlay_file,
< 	auto_overlay_fixed, auto_overlay_reserved, my_argc, my_argv): New vars.
< 	(spu_before_allocation): Warn on --auto-overlay and existing overlays.
< 	(struct tflist, clean_tmp): Move.
< 	(new_tmp_file): New function, extracted from..
< 	(embedded_spu_file): ..here.
< 	(spu_elf_open_overlay_script, spu_elf_relink): New function.
< 	(gld${EMULATION_NAME}_finish): Pass a bunch of --auto-overlay params.
< 	Warn on --auto-overlay and zero local store.
< 	(gld${EMULATION_NAME}_choose_target): New function to stash argv.
< 	(OPTION_SPU_AUTO_OVERLAY, OPTION_SPU_AUTO_RELINK,
< 	OPTION_SPU_OVERLAY_RODATA, OPTION_SPU_FIXED_SPACE,
< 	OPTION_SPU_RESERVED_SPACE, OPTION_SPU_NO_AUTO_OVERLAY): Define.
< 	(PARSE_AND_LIST_LONGOPTS): Add entries for new options.
< 	(PARSE_AND_LIST_OPTIONS): Likewise.
< 	(PARSE_AND_LIST_ARGS_CASES): Likewise.
< 	(LDEMUL_CHOOSE_TARGET): Define.
< 
< 2008-04-03  Kai Tietz  <kai.tietz@onevision.com>
< 
< 	PR ld/6026
< 	* pe-dll.c (make_head): Fix iat and thunk addend offset.
< 
< 2008-03-31  Nick Clifton  <nickc@redhat.com>
< 
< 	* po/fr.po: Updated French translation.
< 
< 2008-03-24  Ian Lance Taylor  <iant@google.com>
< 
< 	The sha1 code is now in libiberty.
< 	* sha1.c: Remove.
< 	* sha1.h: Remove.
< 	* Makefile.am (CFILES): Remove sha1.c.
< 	(HFILES): Remove sha1.h.
< 	(OFILES): Remove sha1.o.
< 	(ld_new_SOURCES): Remove sha1.c.
< 	(sha1.o): Remove target.
< 	* Makefile.in: Rebuild.
< 
< 2008-03-20  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spuelf.em: Update calls to elf32-spu.c funcs.
< 
< 2008-03-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
< 
< 	* aclocal.m4: Regenerate.
< 	* configure: Likewise.
< 	* Makefile.in: Likewise.
< 
< 2008-03-14  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spuelf.em (gld${EMULATION_NAME}_finish): Protect
< 	spu_elf_build_stubs with is_spu_target.
< 
< 2008-03-13  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* Makefile.am: Run "make dep-am".
< 	* Makefile.in: Regenerate.
< 	* configure: Regenerate.
< 
< 2008-03-06  Joseph Myers  <joseph@codesourcery.com>
< 	    Roman Zippel  <zippel@linux-m68k.org>
< 
< 	* emulparams/m68kelf.sh (GENERATE_PIE_SCRIPT): Define.
< 	(COMMONPAGESIZE): Define.
< 
< 2008-02-22  Nick Clifton  <nickc@redhat.com>
< 
< 	PR ld/5785
< 	* ldlang.c (lang_size_sections_1): Honour the setting of an
< 	lma_region even if there is no vma region set, or the vma region
< 	is the same as the lma region.
< 
< 2008-02-18  Nick Clifton  <nickc@redhat.com>
< 
< 	* scripttempl/armbpabi.sc (ENTRY): Do not define when performing a
< 	relocatable link.
< 	* scripttempl/elf32cr16.sc: Likewise.
< 	* scripttempl/elf32cr16c.sc: Likewise.
< 	* scripttempl/elf32crx.sc: Likewise.
< 	* scripttempl/elf32sh-symbian.sc: Likewise.
< 	* scripttempl/elf_chaos.sc: Likewise.
< 	* scripttempl/elfd10v.sc: Likewise.
< 	* scripttempl/elfi370.sc: Likewise.
< 	* scripttempl/elfm68hc11.sc: Likewise.
< 	* scripttempl/elfm68hc12.sc: Likewise.
< 	* scripttempl/ip2k.sc: Likewise.
< 	* scripttempl/iq2000.sc: Likewise.
< 	* scripttempl/mep.sc: Likewise.
< 	* scripttempl/v850.sc: Likewise.
< 	* scripttempl/xstormy16.sc: Likewise.
< 
< 2008-02-16  Alan Modra  <amodra@bigpond.net.au>
< 
< 	PR ld/5761
< 	* ldexp.c (fold_name <LOADADDR>): Check result of evaluating
< 	load_base before calling make_abs.
< 
< 2008-02-15  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/alphaelf.em (alpha_after_open): Use elf_object_id.
< 	* emultempl/hppaelf.em (hppaelf_create_output_section_statements):
< 	Likewise.
< 	* emultempl/ppc64elf.em (ppc_create_output_section_statements):
< 	Likewise.
< 	* emultempl/ppc32elf.em (is_ppc_elf32_vec): Delete.  Replace all
< 	uses with..
< 	(is_ppc_elf): ..this new macro.
< 
< 2008-02-15  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldmain.h (output_bfd): Delete.
< 	* ldmain.c (output_bfd): Delete.
< 	Replace all occurrences of output_bfd with link_info.output_bfd.
< 	* ldcref.c: Likewise.
< 	* ldctor.c: Likewise.
< 	* ldemul.c: Likewise.
< 	* ldexp.c: Likewise.
< 	* ldfile.c: Likewise.
< 	* ldlang.c: Likewise.
< 	* ldmisc.c: Likewise.
< 	* ldwrite.c: Likewise.
< 	* pe-dll.c: Likewise.
< 	* emultempl/aix.em: Likewise.
< 	* emultempl/alphaelf.em: Likewise.
< 	* emultempl/armcoff.em: Likewise.
< 	* emultempl/armelf.em: Likewise.
< 	* emultempl/avrelf.em: Likewise.
< 	* emultempl/beos.em: Likewise.
< 	* emultempl/elf-generic.em: Likewise.
< 	* emultempl/elf32.em: Likewise.
< 	* emultempl/gld960.em: Likewise.
< 	* emultempl/hppaelf.em: Likewise.
< 	* emultempl/irix.em: Likewise.
< 	* emultempl/linux.em: Likewise.
< 	* emultempl/lnk960.em: Likewise.
< 	* emultempl/m68hc1xelf.em: Likewise.
< 	* emultempl/mmix-elfnmmo.em: Likewise.
< 	* emultempl/mmo.em: Likewise.
< 	* emultempl/pe.em: Likewise.
< 	* emultempl/pep.em: Likewise.
< 	* emultempl/ppc32elf.em: Likewise.
< 	* emultempl/ppc64elf.em: Likewise.
< 	* emultempl/scoreelf.em: Likewise.
< 	* emultempl/sh64elf.em: Likewise.
< 	* emultempl/spuelf.em: Likewise.
< 	* emultempl/sunos.em: Likewise.
< 	* emultempl/vanilla.em: Likewise.
< 	* emultempl/vxworks.em: Likewise.
< 	* emultempl/xtensaelf.em: Likewise.
< 	* emultempl/z80.em: Likewise.
< 	* ldlang.c (open_output): Don't return output, instead write
< 	link_info_output_bfd directly.
< 	* emultempl/alphaelf.em: Replace occurrences of link_info.hash->creator
< 	with link_info.output_bfd->xvec.
< 	* emultempl/hppaelf.em: Likewise.
< 	* emultempl/ppc32elf.em: Likewise.
< 	* emultempl/ppc64elf.em: Likewise.
< 	* emultempl/spuelf.em: Likewise.
< 
< 2008-02-07  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldlang.c (new_afile): Don't pass unadorned NULL to concat.
< 	* ldfile.c (ldfile_add_library_path): Likewise.
< 	* emultempl/elf32.em (check_ld_elf_hints, check_ld_so_conf): Likewise.
< 	* emultempl/lnk960.em (lnk960_before_parse): Likewise.
< 	* emultempl/spuelf.em (embedded_spu_file): Likewise.
< 
< 2008-02-07  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spu_ovl.S: Use low bit of _ovly_table.size as
< 	a "present" bit rather than low bit of .buf.  Correct indexing
< 	into _ovly_buf_table.  Use relative loads and stores to access
< 	overlay manager local vars.
< 	* emultempl/spu_ovl.o: Regenerate.
< 
< 2008-02-04  H.J. Lu  <hongjiu.lu@intel.com>
< 
< 	PR 5715
< 	* configure: Regenerated.
< 
< 2008-01-31  Marc Gauthier  <marc@tensilica.com>
< 
< 	* configure.tgt (xtensa*-*-*): Recognize processor variants.
< 
< 2008-01-28  Fabian Groffen  <grobian@gentoo.org>
< 
< 	* configure.tgt (x86_64-*-solaris2): Add support for this target.
< 
< 2008-01-28  Vincent Riviere  <vincent.riviere@freesbee.fr>
< 
< 	PR ld/5652
< 	* genscripts.sh: Check for the existence of BASH_LINENO not just
< 	the BASH shell before generating line numbers in the emulation
< 	file.
< 
< 2008-01-28  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* emultempl/spu_ovl.S: Rewrite.
< 	* emultempl/spu_ovl.o: Regenerate.
< 	* emultempl/spuelf.em (toe): Delete.
< 	(spu_place_special_section): Add param to control section placement.
< 	Adjust callers.
< 	(spu_elf_load_ovl_mgr): Adjust for struct _spu_elf_section_data
< 	changes.
< 	(spu_before_allocation): Adjust spu_elf_size_stubs call.
< 	(gld${EMULATION_NAME}_finish): Adjust spu_elf_build_stubs call.
< 
< 2008-01-25  H.J. Lu  <hongjiu.lu@intel.com>
< 
< 	PR ld/5670
< 	* ldlang.c (process_insert_statements): Silence gcc 4.1 alias
< 	warning.
< 
< 2008-01-25  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ld.texinfo (INSERT): Describe.
< 	* ldgram.y (ldgram_in_script, ldgram_had_equals): Delete.
< 	(INSERT_K, AFTER, BEFORE): Add as tokens.
< 	(ifile_p1): Handle INSERT statements.
< 	(saved_script_handle, force_make_executable): Move to..
< 	* ldmain.c: ..here.
< 	(previous_script_handle): New global var.
< 	* ldmain.h (saved_script_handle, force_make_executable): Declare.
< 	(previous_script_handle): Likewise.
< 	* ldlex.l (INSERT_K, AFTER, BEFORE): Add tokens.
< 	* lexsup.c (parge_args <-T>): Set previous_script_handle.
< 	* ldlang.c (lang_for_each_statement_worker): Handle insert statement.
< 	(map_input_to_output_sections, print_statement): Likewise.
< 	(lang_size_sections_1, lang_do_assignments_1): Likewise.
< 	(insert_os_after): New function, extracted from..
< 	(lang_insert_orphan): ..here.
< 	(process_insert_statements): New function.
< 	(lang_process): Call it.
< 	(lang_add_insert): New function.
< 	* ldlang.h (lang_insert_statement_enum): New.
< 	(lang_insert_statement_type): New.
< 	(lang_statement_union_type): Add insert_statement.
< 	(lang_add_insert): Declare.
< 
< 2008-01-18  Bob Wilson  <bob.wilson@acm.org>
< 
< 	* scripttempl/elfxtensa.sc: Merge ENTRY and .note.gnu.build-id
< 	changes from elf.sc.
< 
< 2008-01-16  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldlang.c (lang_size_sections_1): Simplify SEC_NEVER_LOAD test.
< 
< 2008-01-16  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ldlang.h (lang_afile_asection_pair_statement_enum): Delete.
< 	(lang_afile_asection_pair_statement_type): Delete.
< 	(lang_statement_union_type): Delete afile_asection_pair_statement.
< 	* ldlang.c (lang_insert_orphan): Delete case handling the above.
< 	(map_input_to_output_sections, print_statement): Likewise.
< 
< 2008-01-15  Kaz Kojima  <kkojima@rr.iij4u.or.jp>
< 
< 	* emulparams/shlelf_linux.sh (DATA_START_SYMBOLS): Use PROVIDE
< 	with __data_start.
< 	* emulparams/shelf_nbsd.sh (DATA_START_SYMBOLS): Likewise.
< 
< 2008-01-15  Alan Modra  <amodra@bigpond.net.au>
< 
< 	PR 5604
< 	* ldlang.c (lang_gc_sections): Move code to set SEC_KEEP on entry
< 	syms to _bfd_elf_gc_keep.
< 	* emultempl/ppc64elf.em (ppc_before_allocation): Don't call
< 	ppc64_elf_edit_opd if no_opd_opt.
< 
< 2008-01-11  Tristan Gingold  <gingold@adacore.com>
< 	    Eric Botcazou  <ebotcazou@adacore.com>
< 
< 	* ldlang.c (lang_end): Warns if the entry point is not found when
< 	--gc-sections.
< 	Emit an error if no root is specified when --gc-sections -r.
< 	* ld.texinfo (Options): Document that --gc-sections is compatible
< 	with -r and -q.
< 	* ldmain.c (main): Do not error out if -r and --gc-sections.
< 	* scripttempl/elf.sc: Emit ENTRY command only if relocating.
< 
< 2008-01-10  Daniel Jacobowitz  <drow@sources.redhat.com>
< 
< 	PR ld/5533
< 	* ldlang.c (lang_end): Issue a warning for a missing start symbol
< 	of a shared library if the symbol was specified on the command
< 	line.
< 
< 2008-01-10  Alan Modra  <amodra@bigpond.net.au>
< 
< 	* ld.texinfo (--gc-sections): Describe linker behaviour.
< 
< For older changes see ChangeLog-2007
---
> For older changes see ChangeLog-2008
830a19
> 
Index: ld/Makefile.am
===================================================================
RCS file: /cvs/src/src/ld/Makefile.am,v
retrieving revision 1.253.2.1
retrieving revision 1.253.2.3
diff -r1.253.2.1 -r1.253.2.3
761c761
< 	  cpp -DOVLY_IRQ_SAVE $(srcdir)/emultempl/spu_ovl.S spu_ovl.s
---
> 	  cpp -DOVLY_IRQ_SAVE $(srcdir)/emultempl/spu_ovl.S spu_ovl.s; \
763c763
< 	  ../binutils/bin2c <spu_ovl.o >$@
---
> 	  ../binutils/bin2c <spu_ovl.o >$@; \
1917c1917,1918
< EXTRA_DIST = ldgram.c ldgram.h ldlex.c emultempl/spu_ovl.o_c $(man_MANS)
---
> EXTRA_DIST = ldgram.c ldgram.h ldlex.c emultempl/spu_ovl.o_c \
>            deffilep.c deffilep.h $(man_MANS)
Index: ld/Makefile.in
===================================================================
RCS file: /cvs/src/src/ld/Makefile.in,v
retrieving revision 1.274.2.1
retrieving revision 1.274.2.3
diff -r1.274.2.1 -r1.274.2.3
733c733,735
< EXTRA_DIST = ldgram.c ldgram.h ldlex.c emultempl/spu_ovl.o_c $(man_MANS)
---
> EXTRA_DIST = ldgram.c ldgram.h ldlex.c emultempl/spu_ovl.o_c \
>            deffilep.c deffilep.h $(man_MANS)
> 
1591c1593
< 	  cpp -DOVLY_IRQ_SAVE $(srcdir)/emultempl/spu_ovl.S spu_ovl.s
---
> 	  cpp -DOVLY_IRQ_SAVE $(srcdir)/emultempl/spu_ovl.S spu_ovl.s; \
1593c1595
< 	  ../binutils/bin2c <spu_ovl.o >$@
---
> 	  ../binutils/bin2c <spu_ovl.o >$@; \
Index: ld/pe-dll.c
===================================================================
RCS file: /cvs/src/src/ld/pe-dll.c,v
retrieving revision 1.108
retrieving revision 1.108.2.1
diff -r1.108 -r1.108.2.1
3c3
<    2008 Free Software Foundation, Inc.
---
>    2008, 2009 Free Software Foundation, Inc.
316a317
>   { STRING_COMMA_LEN ("libgcc_s") },
326a328,358
> /* Regardless of the suffix issue mentioned above, we must ensure that
>   we do not falsely match on a leading substring, such as when libtool
>   builds libstdc++ as a DLL using libsupc++convenience.a as an intermediate.
>   This routine ensures that the leading part of the name matches and that
>   it is followed by only an optional version suffix and a file extension,
>   returning zero if so or -1 if not.  */
> static int libnamencmp (const char *libname, const autofilter_entry_type *afptr)
> {
>   if (strncmp (libname, afptr->name, afptr->len))
>     return -1;
> 
>   libname += afptr->len;
> 
>   /* Be liberal in interpreting what counts as a version suffix; we
>     accept anything that has a dash to separate it from the name and
>     begins with a digit.  */
>   if (libname[0] == '-')
>     {
>       if (!ISDIGIT (*++libname))
> 	return -1;
>       /* Ensure the filename has an extension.  */
>       while (*++libname != '.')
> 	if (!*libname)
> 	  return -1;
>     }
>   else if (libname[0] != '.')
>     return -1;
> 
>   return 0;
> }
> 
504c536
< 	      if (strncmp (libname, afptr->name, afptr->len) == 0 )
---
> 	      if (libnamencmp (libname, afptr) == 0 )
Index: ld/testsuite/ChangeLog
===================================================================
RCS file: /cvs/src/src/ld/testsuite/ChangeLog,v
retrieving revision 1.967.2.4
retrieving revision 1.967.2.5
diff -r1.967.2.4 -r1.967.2.5
0a1,5
> 2009-01-14  Joseph Myers  <joseph@codesourcery.com>
> 
> 	* ld-arm/thumb2-bl-undefweak.d, ld-arm/thumb2-bl-undefweak.s: New.
> 	* ld-arm/arm-elf.exp: Run thumb2-bl-undefweak test.
> 
Index: ld/testsuite/ld-arm/arm-elf.exp
===================================================================
RCS file: /cvs/src/src/ld/testsuite/ld-arm/arm-elf.exp,v
retrieving revision 1.41
retrieving revision 1.41.2.1
diff -r1.41 -r1.41.2.1
186a187
> run_dump_test "thumb2-bl-undefweak"
Index: opcodes/ChangeLog
===================================================================
RCS file: /cvs/src/src/opcodes/ChangeLog,v
retrieving revision 1.1299.2.2
retrieving revision 1.1299.2.5
diff -r1.1299.2.2 -r1.1299.2.5
0a1,17
> 2008-11-27  Alan Modra  <amodra@bigpond.net.au>
> 
> 	* ppc-opc.c (extract_sprg): Correct operand range check.
> 
> 2008-11-26  Andreas Schwab  <schwab@suse.de>
> 
> 	* m68k-dis.c (NEXTBYTE, NEXTWORD, NEXTLONG, NEXTULONG, NEXTSINGLE)
> 	(NEXTDOUBLE, NEXTEXTEND, NEXTPACKED): Fix error handling.
> 	(save_printer, save_print_address): Remove.
> 	(fetch_data): Don't use them.
> 	(match_insn_m68k): Always restore printing functions.
> 	(print_insn_m68k): Don't save/restore printing functions.
> 
> 2008-11-25  Nick Clifton  <nickc@redhat.com>
> 
> 	* m68k-dis.c: Rewrite to remove use of setjmp/longjmp.
> 
Index: opcodes/m68k-dis.c
===================================================================
RCS file: /cvs/src/src/opcodes/m68k-dis.c,v
retrieving revision 1.29
retrieving revision 1.29.8.2
diff -r1.29 -r1.29.8.2
63c63,71
< #define NEXTBYTE(p)  (p += 2, FETCH_DATA (info, p), COERCE_SIGNED_CHAR(p[-1]))
---
> #define NEXTBYTE(p, val)			\
>   do						\
>     {						\
>       p += 2;					\
>       if (!FETCH_DATA (info, p))		\
> 	return -3;				\
>       val = COERCE_SIGNED_CHAR (p[-1]);		\
>     }						\
>   while (0)
67,69c75,84
< #define NEXTWORD(p)  \
<   (p += 2, FETCH_DATA (info, p), \
<    COERCE16 ((p[-2] << 8) + p[-1]))
---
> 
> #define NEXTWORD(p, val, ret_val)		\
>   do						\
>     {						\
>       p += 2;					\
>       if (!FETCH_DATA (info, p))		\
> 	return ret_val;				\
>       val = COERCE16 ((p[-2] << 8) + p[-1]);	\
>     }						\
>   while (0)						
73,75c88,97
< #define NEXTLONG(p)  \
<   (p += 4, FETCH_DATA (info, p), \
<    (COERCE32 ((((((p[-4] << 8) + p[-3]) << 8) + p[-2]) << 8) + p[-1])))
---
> 
> #define NEXTLONG(p, val, ret_val)					\
>   do									\
>     {									\
>       p += 4;								\
>       if (!FETCH_DATA (info, p))					\
> 	return ret_val;							\
>       val = COERCE32 ((((((p[-4] << 8) + p[-3]) << 8) + p[-2]) << 8) + p[-1]); \
>     }									\
>   while (0)
78,80c100,108
< #define NEXTULONG(p)  \
<   (p += 4, FETCH_DATA (info, p), \
<    (unsigned int) ((((((p[-4] << 8) + p[-3]) << 8) + p[-2]) << 8) + p[-1]))
---
> #define NEXTULONG(p, val)						\
>   do									\
>     {									\
>       p += 4;								\
>       if (!FETCH_DATA (info, p))					\
> 	return -3;							\
>       val = (unsigned int) ((((((p[-4] << 8) + p[-3]) << 8) + p[-2]) << 8) + p[-1]); \
>     }									\
>   while (0)
83,85c111,120
< #define NEXTSINGLE(val, p) \
<   (p += 4, FETCH_DATA (info, p), \
<    floatformat_to_double (&floatformat_ieee_single_big, (char *) p - 4, &val))
---
> #define NEXTSINGLE(val, p)					\
>   do								\
>     {								\
>       p += 4;							\
>       if (!FETCH_DATA (info, p))				\
> 	return -3;						\
>       floatformat_to_double (& floatformat_ieee_single_big,	\
> 			     (char *) p - 4, & val);		\
>     }								\
>   while (0)
88,90c123,132
< #define NEXTDOUBLE(val, p) \
<   (p += 8, FETCH_DATA (info, p), \
<    floatformat_to_double (&floatformat_ieee_double_big, (char *) p - 8, &val))
---
> #define NEXTDOUBLE(val, p)					\
>   do								\
>     {								\
>       p += 8;							\
>       if (!FETCH_DATA (info, p))				\
> 	return -3;						\
>       floatformat_to_double (& floatformat_ieee_double_big,	\
> 			     (char *) p - 8, & val);		\
>     }								\
>   while (0)
93,95c135,144
< #define NEXTEXTEND(val, p) \
<   (p += 12, FETCH_DATA (info, p), \
<    floatformat_to_double (&floatformat_m68881_ext, (char *) p - 12, &val))
---
> #define NEXTEXTEND(val, p)				\
>   do							\
>     {							\
>       p += 12;						\
>       if (!FETCH_DATA (info, p))			\
> 	return -3;					\
>       floatformat_to_double (& floatformat_m68881_ext,	\
> 			     (char *) p - 12, & val);	\
>     }							\
>   while (0)
101,102c150,159
< #define NEXTPACKED(p) \
<   (p += 12, FETCH_DATA (info, p), 0.0)
---
> #define NEXTPACKED(p, val)			\
>   do						\
>     {						\
>       p += 12;					\
>       if (!FETCH_DATA (info, p))		\
> 	return -3;				\
>       val = 0.0;				\
>     }						\
>   while (0)
> 
115d171
<   jmp_buf bailout;
119,120c175
<    to ADDR (exclusive) are valid.  Returns 1 for success, longjmps
<    on error.  */
---
>    to ADDR (exclusive) are valid.  Returns 1 for success, 0 on error.  */
139c194
<       longjmp (priv->bailout, 1);
---
>       return 0;
164c219,220
<    BUFFER contains the instruction.  */
---
>    BUFFER contains the instruction.
>    Returns -1 on failure.  */
219c275,276
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
224c281,282
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
229c287,288
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
235c294,295
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
242c302,303
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
247c308,309
<       FETCH_DATA (info, buffer + 5);
---
>       if (! FETCH_DATA (info, buffer + 5))
> 	return -1;
253c315,316
<       FETCH_DATA (info, buffer + 5);
---
>       if (! FETCH_DATA (info, buffer + 5))
> 	return -1;
259c322,323
<       FETCH_DATA (info, buffer + 5);
---
>       if (! FETCH_DATA (info, buffer + 5))
> 	return -1;
264c328,329
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
270c335,336
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
276c342,343
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
286c353,354
<       FETCH_DATA (info, buffer + 3);
---
>       if (! FETCH_DATA (info, buffer + 3))
> 	return -1;
453c521,522
<    ADDR is the nominal core address of that extension word.  */
---
>    ADDR is the nominal core address of that extension word.
>    Returns NULL upon error.  */
468c537
<   word = NEXTWORD (p);
---
>   NEXTWORD (p, word, NULL);
506c575
<       base_disp = NEXTWORD (p);
---
>       NEXTWORD (p, base_disp, NULL);
509c578
<       base_disp = NEXTLONG (p);
---
>       NEXTLONG (p, base_disp, NULL);
529c598
<       outer_disp = NEXTWORD (p);
---
>       NEXTWORD (p, outer_disp, NULL);
532c601
<       outer_disp = NEXTLONG (p);
---
>       NEXTLONG (p, outer_disp, NULL);
549a619,627
> #define FETCH_ARG(size, val)				\
>   do							\
>     {							\
>       val = fetch_arg (buffer, place, size, info);	\
>       if (val < 0)					\
> 	return -3;					\
>     }							\
>   while (0)
> 
552c630
<    an opcode tabe error was found.
---
>    an opcode tabe error was found or -3 to simply abort.
578,579c656,657
<         val = fetch_arg (buffer, place, 2, info);
<         (*info->fprintf_func) (info->stream, cacheFieldName[val]);
---
>         FETCH_ARG (2, val);
> 	(*info->fprintf_func) (info->stream, cacheFieldName[val]);
585,588c663,664
<         (*info->fprintf_func)
< 	  (info->stream,
< 	   "%s@",
< 	   reg_names[fetch_arg (buffer, place, 3, info) + 8]);
---
> 	FETCH_ARG (3, val);
> 	(*info->fprintf_func) (info->stream, "%s@", reg_names[val + 8]);
594c670
<         uval = NEXTULONG (p);
---
>         NEXTULONG (p, uval);
646c722
< 	val = fetch_arg (buffer, place, 12, info);
---
> 	FETCH_ARG (12, val);
659c735
<       val = fetch_arg (buffer, place, 3, info);
---
>       FETCH_ARG (3, val);
667c743
<       val = fetch_arg (buffer, place, 3, info);
---
>       FETCH_ARG (3, val);
675c751
<       val = fetch_arg (buffer, place, 3, info);
---
>       FETCH_ARG (3, val);
680c756
<       val = fetch_arg (buffer, place, 9, info);
---
>       FETCH_ARG (9, val);
688c764,765
< 	  val = fetch_arg (buffer, place, 1, info);
---
> 
> 	  FETCH_ARG (1, val);
693c770
< 	  val = fetch_arg (buffer, place, 8, info);
---
> 	  FETCH_ARG (8, val);
701c778
<       val = fetch_arg (buffer, place, 4, info);
---
>       FETCH_ARG (4, val);
706,707c783,784
<       (*info->fprintf_func) (info->stream, "%s",
< 			     reg_names[fetch_arg (buffer, place, 3, info)]);
---
>       FETCH_ARG (3, val);
>       (*info->fprintf_func) (info->stream, "%s", reg_names[val]);
711,713c788,789
<       (*info->fprintf_func)
< 	(info->stream, "%s",
< 	 reg_names[fetch_arg (buffer, place, 3, info) + 010]);
---
>       FETCH_ARG (3, val);
>       (*info->fprintf_func) (info->stream, "%s", reg_names[val + 010]);
717,719c793,794
<       (*info->fprintf_func)
< 	(info->stream, "%s",
< 	 reg_names[fetch_arg (buffer, place, 4, info)]);
---
>       FETCH_ARG (4, val);
>       (*info->fprintf_func) (info->stream, "%s", reg_names[val]);
723c798
<       regno = fetch_arg (buffer, place, 4, info);
---
>       FETCH_ARG (4, regno);
731,733c806,807
<       (*info->fprintf_func)
< 	(info->stream, "%%fp%d",
< 	 fetch_arg (buffer, place, 3, info));
---
>       FETCH_ARG (3, val);
>       (*info->fprintf_func) (info->stream, "%%fp%d", val);
737c811
<       val = fetch_arg (buffer, place, 6, info);
---
>       FETCH_ARG (6, val);
745,747c819,820
<       (*info->fprintf_func)
< 	(info->stream, "%s@+",
< 	 reg_names[fetch_arg (buffer, place, 3, info) + 8]);
---
>       FETCH_ARG (3, val);
>       (*info->fprintf_func) (info->stream, "%s@+", reg_names[val + 8]);
751,753c824,825
<       (*info->fprintf_func)
< 	(info->stream, "%s@-",
< 	 reg_names[fetch_arg (buffer, place, 3, info) + 8]);
---
>       FETCH_ARG (3, val);
>       (*info->fprintf_func) (info->stream, "%s@-", reg_names[val + 8]);
758,760c830,833
< 	(*info->fprintf_func)
< 	  (info->stream, "{%s}",
< 	   reg_names[fetch_arg (buffer, place, 3, info)]);
---
> 	{
> 	  FETCH_ARG (3, val);
> 	  (*info->fprintf_func) (info->stream, "{%s}", reg_names[val]);
> 	}
763c836
< 	  val = fetch_arg (buffer, place, 7, info);
---
> 	  FETCH_ARG (7, val);
769c842
< 	return -2;
---
> 	return -1;
776c849
< 	val = fetch_arg (buffer, place, 4, info);
---
> 	FETCH_ARG (4, val);
778c851
< 	val = fetch_arg (buffer, place, 7, info);
---
> 	FETCH_ARG (7, val);
780c853
< 	val = fetch_arg (buffer, place, 3, info);
---
> 	FETCH_ARG (3, val);
782c855
< 	val = fetch_arg (buffer, place, 8, info);
---
> 	FETCH_ARG (8, val);
784c857
< 	val = NEXTBYTE (p1);
---
> 	NEXTBYTE (p1, val);
786c859
< 	val = NEXTWORD (p1);
---
> 	NEXTWORD (p1, val, -3);
788c861
< 	val = NEXTLONG (p1);
---
> 	NEXTLONG (p1, val, -3);
790a864
> 
796c870
< 	disp = NEXTBYTE (p);
---
> 	NEXTBYTE (p, disp);
800c874
< 	disp = NEXTWORD (p);
---
> 	NEXTWORD (p, disp, -3);
802c876
< 	disp = NEXTLONG (p);
---
> 	NEXTLONG (p, disp, -3);
805c879
< 	  disp = NEXTBYTE (buffer);
---
> 	  NEXTBYTE (buffer, disp);
807c881
< 	    disp = NEXTWORD (p);
---
> 	    NEXTWORD (p, disp, -3);
809c883
< 	    disp = NEXTLONG (p);
---
> 	    NEXTLONG (p, disp, -3);
814c888
< 	    disp = NEXTLONG (p);
---
> 	    NEXTLONG (p, disp, -3);
816c890
< 	    disp = NEXTWORD (p);
---
> 	    NEXTWORD (p, disp, -3);
825,829c899,906
<       val = NEXTWORD (p);
<       (*info->fprintf_func)
< 	(info->stream, "%s@(%d)",
< 	 reg_names[fetch_arg (buffer, place, 3, info) + 8], val);
<       break;
---
>       {
> 	int val1;
> 
> 	NEXTWORD (p, val, -3);
> 	FETCH_ARG (3, val1);
> 	(*info->fprintf_func) (info->stream, "%s@(%d)", reg_names[val1 + 8], val);
> 	break;
>       }
832,833c909,910
<       (*info->fprintf_func) (info->stream, "%s",
< 			     fpcr_names[fetch_arg (buffer, place, 3, info)]);
---
>       FETCH_ARG (3, val);
>       (*info->fprintf_func) (info->stream, "%s", fpcr_names[val]);
837c914
<       val = fetch_arg(buffer, place, 2, info);
---
>       FETCH_ARG (2, val);
842,843c919,920
<       val = fetch_arg(buffer, place, 1, info);
<       (*info->fprintf_func) (info->stream, "%%accext%s", val==0 ? "01" : "23");
---
>       FETCH_ARG (1, val);
>       (*info->fprintf_func) (info->stream, "%%accext%s", val == 0 ? "01" : "23");
847c924
<       val = fetch_arg(buffer, place, 2, info);
---
>       FETCH_ARG (2, val);
859c936,937
< 
---
>       if (val < 0)
> 	return -3;
890a969,970
> 	  if (val < 0)
> 	    return -3;
894c974,978
< 	val = fetch_arg (buffer, 's', 6, info);
---
> 	{
> 	  val = fetch_arg (buffer, 's', 6, info);
> 	  if (val < 0)
> 	    return -3;
> 	}
926c1010
< 	  val = NEXTWORD (p);
---
> 	  NEXTWORD (p, val, -3);
931a1016,1017
> 	  if (p == NULL)
> 	    return -3;
938c1024
< 	      val = NEXTWORD (p);
---
> 	      NEXTWORD (p, val, -3);
943c1029
< 	      uval = NEXTULONG (p);
---
> 	      NEXTULONG (p, uval);
948c1034
< 	      val = NEXTWORD (p);
---
> 	      NEXTWORD (p, val, -3);
955a1042,1043
> 	      if (p == NULL)
> 		return -3;
963c1051
< 		  val = NEXTBYTE (p);
---
> 		  NEXTBYTE (p, val);
968c1056
< 		  val = NEXTWORD (p);
---
> 		  NEXTWORD (p, val, -3);
973c1061
< 		  val = NEXTLONG (p);
---
> 		  NEXTLONG (p, val, -3);
990c1078
< 		  flval = NEXTPACKED (p);
---
> 		  NEXTPACKED (p, flval);
1012c1100
< 	  val = fetch_arg (buffer, place, 1, info);
---
> 	  FETCH_ARG (1, val);
1024c1112
< 	    val = NEXTWORD (p1);
---
> 	    NEXTWORD (p1, val, -3);
1065c1153,1154
< 	    val = fetch_arg (buffer, place, 8, info);
---
> 
> 	    FETCH_ARG (8, val);
1098a1188
> 	    FETCH_ARG (3, val);
1100,1102c1190
< 	    (*info->fprintf_func) (info->stream, "%s",
< 				   fpcr_names[fetch_arg (buffer, place, 3,
< 							 info)]);
---
> 	    (*info->fprintf_func) (info->stream, "%s", fpcr_names[val]);
1118c1206
< 	int val = fetch_arg (buffer, place, 5, info);
---
> 	int val;
1120a1209
> 	FETCH_ARG (5, val);
1155c1244
< 	int fc = fetch_arg (buffer, place, 5, info);
---
> 	int fc;
1156a1246
> 	FETCH_ARG (5, fc);
1173c1263
< 	int level = fetch_arg (buffer, place, 3, info);
---
> 	int level;
1174a1265
> 	FETCH_ARG (3, level);
1182c1273
< 	int reg = fetch_arg (buffer, place, 5, info);
---
> 	int reg;
1183a1275
> 	FETCH_ARG (5, reg);
1306c1398
<       else if (eaten == -1)
---
>       else if (eaten == -1 || eaten == -3)
1321c1413
< 			      best->name,  best->args);
---
> 			      best->name, best->args);
1441a1534,1535
> 		      if (val < 0)
> 			return 0;
1482,1488c1576
<   /* Save these printing functions in case we need to restore them
<      later.  */
<   fprintf_ftype save_printer = info->fprintf_func;
<   void (* save_print_address) (bfd_vma, struct disassemble_info *)
<     = info->print_address_func;
< 
<   info->private_data = (PTR) &priv;
---
>   info->private_data = & priv;
1497,1518d1584
<   if (setjmp (priv.bailout) != 0)
<     {
<       /* longjmp may be called while these printing functions are
< 	 temporarily replaced with dummy functions.  Restore them
< 	 before we leave.
< 
< 	 Admittedly, this save-and-restore operation is somewhat ugly
< 	 in that we are exposing the fact that match_insn_m68k
< 	 temporarily replaces insn->fprintf_func and
< 	 insn->print_address_func.  Perhaps, a real fix is to report a
< 	 FETCH_DATA failure with a return value of some sort, without
< 	 using setjmp/longjmp.  A better fix may be to teach the m68k
< 	 disassembler do its job without temporarily replacing
< 	 insn->fprintf_func and insn->print_address_func, but that's a
< 	 task for another day.  */
<       info->fprintf_func = save_printer;
<       info->print_address_func = save_print_address;
< 
<       /* Error return.  */
<       return -1;
<     }
< 
1525,1530c1591,1592
<       if (val)
< 	return val;
< 
<       val = m68k_scan_mask (memaddr, info, mcf_mask);
<       if (val)
< 	return val;
---
>       if (val == 0)
> 	val = m68k_scan_mask (memaddr, info, mcf_mask);
1535,1536d1596
<       if (val)
< 	return val;
1539,1541c1599,1603
<   /* Handle undefined instructions.  */
<   info->fprintf_func (info->stream, "0%o", (buffer[0] << 8) + buffer[1]);
<   return 2;
---
>   if (val == 0)
>     /* Handle undefined instructions.  */
>     info->fprintf_func (info->stream, "0%o", (buffer[0] << 8) + buffer[1]);
> 
>   return val ? val : 2;
Index: opcodes/ppc-opc.c
===================================================================
RCS file: /cvs/src/src/opcodes/ppc-opc.c,v
retrieving revision 1.110
retrieving revision 1.110.2.1
diff -r1.110 -r1.110.2.1
1284,1287c1284,1287
<   if (val <= 3
<       || (val < 0x10 && (insn & 0x100) != 0)
<       || (val - 0x10 > 3
< 	  && (dialect & (PPC_OPCODE_BOOKE | PPC_OPCODE_403)) == 0))
---
>   if ((val - 0x10 > 3 && (dialect & (PPC_OPCODE_BOOKE | PPC_OPCODE_405)) == 0)
>       || (val - 0x10 > 7 && (insn & 0x100) != 0)
>       || val <= 3
>       || (val & 8) != 0)
